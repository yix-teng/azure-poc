{
	"name": "Round_2_create_external_spark_tables_3TB",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Rd2Cluster",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_sparksql",
				"display_name": "Synapse SQL"
			},
			"language_info": {
				"name": "sql"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/dedfa758-9fb0-4c1b-b0e2-25c590d4f804/resourceGroups/POC-SQL_ADLS-ENV/providers/Microsoft.Synapse/workspaces/pocsqladlsenv/bigDataPools/Rd2Cluster",
				"name": "Rd2Cluster",
				"type": "Spark",
				"endpoint": "https://pocsqladlsenv.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Rd2Cluster",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 4,
				"cores": 8,
				"memory": 56
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE DATABASE Round_2_create_external_spark_tables_3TB_DB;"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"                                                                                                  \n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`call_center` (`cc_call_center_sk` INT, `cc_call_center_id` STRING, `cc_rec_start_date` DATE, `cc_rec_end_date` DATE, `cc_closed_date_sk` INT, `cc_open_date_sk` INT, `cc_name` STRING, `cc_class` STRING, `cc_employees` INT, `cc_sq_ft` INT, `cc_hours` STRING, `cc_manager` STRING, `cc_mkt_id` INT, `cc_mkt_class` STRING, `cc_mkt_desc` STRING, `cc_market_manager` STRING, `cc_division` INT, `cc_division_name` STRING, `cc_company` INT, `cc_company_name` STRING, `cc_street_number` STRING, `cc_street_name` STRING, `cc_street_type` STRING, `cc_suite_number` STRING, `cc_city` STRING, `cc_county` STRING, `cc_state` STRING, `cc_zip` STRING, `cc_country` STRING, `cc_gmt_offset` DECIMAL(5,2), `cc_tax_percentage` DECIMAL(5,2))         \n",
					"USING parquet                   \n",
					"OPTIONS (                         \n",
					"  `serialization.format` '1',     \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/call_center'\n",
					"); \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`catalog_page` (`cp_catalog_page_sk` INT, `cp_catalog_page_id` STRING, `cp_start_date_sk` INT, `cp_end_date_sk` INT, `cp_department` STRING, `cp_catalog_number` INT, `cp_catalog_page_number` INT, `cp_description` STRING, `cp_type` STRING)                                 \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/catalog_page'                                                                                                             \n",
					");       \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`catalog_returns` (`cr_returned_time_sk` INT, `cr_item_sk` INT, `cr_refunded_customer_sk` INT, `cr_refunded_cdemo_sk` INT, `cr_refunded_hdemo_sk` INT, `cr_refunded_addr_sk` INT, `cr_returning_customer_sk` INT, `cr_returning_cdemo_sk` INT, `cr_returning_hdemo_sk` INT, `cr_returning_addr_sk` INT, `cr_call_center_sk` INT, `cr_catalog_page_sk` INT, `cr_ship_mode_sk` INT, `cr_warehouse_sk` INT, `cr_reason_sk` INT, `cr_order_number` BIGINT, `cr_return_quantity` INT, `cr_return_amount` DECIMAL(7,2), `cr_return_tax` DECIMAL(7,2), `cr_return_amt_inc_tax` DECIMAL(7,2), `cr_fee` DECIMAL(7,2), `cr_return_ship_cost` DECIMAL(7,2), `cr_refunded_cash` DECIMAL(7,2), `cr_reversed_charge` DECIMAL(7,2), `cr_store_credit` DECIMAL(7,2), `cr_net_loss` DECIMAL(7,2), `cr_returned_date_sk` INT)                                                            \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/catalog_returns'                                                                                                          \n",
					")                               \n",
					"PARTITIONED BY (cr_returned_date_sk);\n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`catalog_sales` (`cs_sold_time_sk` INT, `cs_ship_date_sk` INT, `cs_bill_customer_sk` INT, `cs_bill_cdemo_sk` INT, `cs_bill_hdemo_sk` INT, `cs_bill_addr_sk` INT, `cs_ship_customer_sk` INT, `cs_ship_cdemo_sk` INT, `cs_ship_hdemo_sk` INT, `cs_ship_addr_sk` INT, `cs_call_center_sk` INT, `cs_catalog_page_sk` INT, `cs_ship_mode_sk` INT, `cs_warehouse_sk` INT, `cs_item_sk` INT, `cs_promo_sk` INT, `cs_order_number` BIGINT, `cs_quantity` INT, `cs_wholesale_cost` DECIMAL(7,2), `cs_list_price` DECIMAL(7,2), `cs_sales_price` DECIMAL(7,2), `cs_ext_discount_amt` DECIMAL(7,2), `cs_ext_sales_price` DECIMAL(7,2), `cs_ext_wholesale_cost` DECIMAL(7,2), `cs_ext_list_price` DECIMAL(7,2), `cs_ext_tax` DECIMAL(7,2), `cs_coupon_amt` DECIMAL(7,2), `cs_ext_ship_cost` DECIMAL(7,2), `cs_net_paid` DECIMAL(7,2), `cs_net_paid_inc_tax` DECIMAL(7,2), `cs_net_paid_inc_ship` DECIMAL(7,2), `cs_net_paid_inc_ship_tax` DECIMAL(7,2), `cs_net_profit` DECIMAL(7,2), `cs_sold_date_sk` INT)                     \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/catalog_sales'                                                                                                            \n",
					")                               \n",
					"PARTITIONED BY (cs_sold_date_sk);                                                                                                            \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`customer` (`c_customer_sk` INT, `c_customer_id` STRING, `c_current_cdemo_sk` INT, `c_current_hdemo_sk` INT, `c_current_addr_sk` INT, `c_first_shipto_date_sk` INT, `c_first_sales_date_sk` INT, `c_salutation` STRING, `c_first_name` STRING, `c_last_name` STRING, `c_preferred_cust_flag` STRING, `c_birth_day` INT, `c_birth_month` INT, `c_birth_year` INT, `c_birth_country` STRING, `c_login` STRING, `c_email_address` STRING, `c_last_review_date` STRING)                                                                                                        \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/customer'   \n",
					");           \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`customer_address` (`ca_address_sk` INT, `ca_address_id` STRING, `ca_street_number` STRING, `ca_street_name` STRING, `ca_street_type` STRING, `ca_suite_number` STRING, `ca_city` STRING, `ca_county` STRING, `ca_state` STRING, `ca_zip` STRING, `ca_country` STRING, `ca_gmt_offset` DECIMAL(5,2), `ca_location_type` STRING)                                                                                              \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/customer_address'                                                                                                         \n",
					");                                       \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`customer_demographics` (`cd_demo_sk` INT, `cd_gender` STRING, `cd_marital_status` STRING, `cd_education_status` STRING, `cd_purchase_estimate` INT, `cd_credit_rating` STRING, `cd_dep_count` INT, `cd_dep_employed_count` INT, `cd_dep_college_count` INT)                   USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/customer_demographics'                                                                                                    \n",
					");                               \n",
					"                                  \n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`date_dim` (`d_date_sk` INT, `d_date_id` STRING, `d_date` DATE, `d_month_seq` INT, `d_week_seq` INT, `d_quarter_seq` INT, `d_year` INT, `d_dow` INT, `d_moy` INT, `d_dom` INT, `d_qoy` INT, `d_fy_year` INT, `d_fy_quarter_seq` INT, `d_fy_week_seq` INT, `d_day_name` STRING, `d_quarter_name` STRING, `d_holiday` STRING, `d_weekend` STRING, `d_following_holiday` STRING, `d_first_dom` INT, `d_last_dom` INT, `d_same_day_ly` INT, `d_same_day_lq` INT, `d_current_day` STRING, `d_current_week` STRING, `d_current_month` STRING, `d_current_quarter` STRING, `d_current_year` STRING)               \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/date_dim'   \n",
					");                                   \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`household_demographics` (`hd_demo_sk` INT, `hd_income_band_sk` INT, `hd_buy_potential` STRING, `hd_dep_count` INT, `hd_vehicle_count` INT)                      \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/household_demographics'                                                                                                   \n",
					");                                                   \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`income_band` (`ib_income_band_sk` INT, `ib_lower_bound` INT, `ib_upper_bound` INT)                                              \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/income_band'\n",
					");             \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`inventory` (`inv_item_sk` INT, `inv_warehouse_sk` INT, `inv_quantity_on_hand` INT, `inv_date_sk` INT)                           \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/inventory'  \n",
					")                               \n",
					"PARTITIONED BY (inv_date_sk);\n",
					"\n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`item` (`i_item_sk` INT, `i_item_id` STRING, `i_rec_start_date` DATE, `i_rec_end_date` DATE, `i_item_desc` STRING, `i_current_price` DECIMAL(7,2), `i_wholesale_cost` DECIMAL(7,2), `i_brand_id` INT, `i_brand` STRING, `i_class_id` INT, `i_class` STRING, `i_category_id` INT, `i_category` STRING, `i_manufact_id` INT, `i_manufact` STRING, `i_size` STRING, `i_formulation` STRING, `i_color` STRING, `i_units` STRING, `i_container` STRING, `i_manager_id` INT, `i_product_name` STRING)                                                                            \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/item'       \n",
					") ;                    \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`promotion` (`p_promo_sk` INT, `p_promo_id` STRING, `p_start_date_sk` INT, `p_end_date_sk` INT, `p_item_sk` INT, `p_cost` DECIMAL(15,2), `p_response_target` INT, `p_promo_name` STRING, `p_channel_dmail` STRING, `p_channel_email` STRING, `p_channel_catalog` STRING, `p_channel_tv` STRING, `p_channel_radio` STRING, `p_channel_press` STRING, `p_channel_event` STRING, `p_channel_demo` STRING, `p_channel_details` STRING, `p_purpose` STRING, `p_discount_active` STRING)                                                                                         \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/promotion'  \n",
					") ;                    \n",
					"\n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`reason` (`r_reason_sk` INT, `r_reason_id` STRING, `r_reason_desc` STRING)                                                       \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/reason'     \n",
					") ;                              \n",
					"         \n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`ship_mode` (`sm_ship_mode_sk` INT, `sm_ship_mode_id` STRING, `sm_type` STRING, `sm_code` STRING, `sm_carrier` STRING, `sm_contract` STRING)                     \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/ship_mode'  \n",
					") ;           \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`store` (`s_store_sk` INT, `s_store_id` STRING, `s_rec_start_date` DATE, `s_rec_end_date` DATE, `s_closed_date_sk` INT, `s_store_name` STRING, `s_number_employees` INT, `s_floor_space` INT, `s_hours` STRING, `s_manager` STRING, `s_market_id` INT, `s_geography_class` STRING, `s_market_desc` STRING, `s_market_manager` STRING, `s_division_id` INT, `s_division_name` STRING, `s_company_id` INT, `s_company_name` STRING, `s_street_number` STRING, `s_street_name` STRING, `s_street_type` STRING, `s_suite_number` STRING, `s_city` STRING, `s_county` STRING, `s_state` STRING, `s_zip` STRING, `s_country` STRING, `s_gmt_offset` DECIMAL(5,2), `s_tax_precentage` DECIMAL(5,2))                             \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/store'      \n",
					")  ;                     \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`store_returns` (`sr_return_time_sk` INT, `sr_item_sk` INT, `sr_customer_sk` INT, `sr_cdemo_sk` INT, `sr_hdemo_sk` INT, `sr_addr_sk` INT, `sr_store_sk` INT, `sr_reason_sk` INT, `sr_ticket_number` BIGINT, `sr_return_quantity` INT, `sr_return_amt` DECIMAL(7,2), `sr_return_tax` DECIMAL(7,2), `sr_return_amt_inc_tax` DECIMAL(7,2), `sr_fee` DECIMAL(7,2), `sr_return_ship_cost` DECIMAL(7,2), `sr_refunded_cash` DECIMAL(7,2), `sr_reversed_charge` DECIMAL(7,2), `sr_store_credit` DECIMAL(7,2), `sr_net_loss` DECIMAL(7,2), `sr_returned_date_sk` INT)              \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/store_returns'                                                                                                            \n",
					")                               \n",
					"PARTITIONED BY (sr_returned_date_sk)  ; \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`store_sales` (`ss_sold_time_sk` INT, `ss_item_sk` INT, `ss_customer_sk` INT, `ss_cdemo_sk` INT, `ss_hdemo_sk` INT, `ss_addr_sk` INT, `ss_store_sk` INT, `ss_promo_sk` INT, `ss_ticket_number` BIGINT, `ss_quantity` INT, `ss_wholesale_cost` DECIMAL(7,2), `ss_list_price` DECIMAL(7,2), `ss_sales_price` DECIMAL(7,2), `ss_ext_discount_amt` DECIMAL(7,2), `ss_ext_sales_price` DECIMAL(7,2), `ss_ext_wholesale_cost` DECIMAL(7,2), `ss_ext_list_price` DECIMAL(7,2), `ss_ext_tax` DECIMAL(7,2), `ss_coupon_amt` DECIMAL(7,2), `ss_net_paid` DECIMAL(7,2), `ss_net_paid_inc_tax` DECIMAL(7,2), `ss_net_profit` DECIMAL(7,2), `ss_sold_date_sk` INT)                                                                    \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/store_sales'\n",
					")                               \n",
					"PARTITIONED BY (ss_sold_date_sk)   ;\n",
					"\n",
					"\n",
					"     \n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`time_dim` (`t_time_sk` INT, `t_time_id` STRING, `t_time` INT, `t_hour` INT, `t_minute` INT, `t_second` INT, `t_am_pm` STRING, `t_shift` STRING, `t_sub_shift` STRING, `t_meal_time` STRING)                                                                                   \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/time_dim'   \n",
					");\n",
					"\n",
					"                               \n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`warehouse` (`w_warehouse_sk` INT, `w_warehouse_id` STRING, `w_warehouse_name` STRING, `w_warehouse_sq_ft` INT, `w_street_number` STRING, `w_street_name` STRING, `w_street_type` STRING, `w_suite_number` STRING, `w_city` STRING, `w_county` STRING, `w_state` STRING, `w_zip` STRING, `w_country` STRING, `w_gmt_offset` DECIMAL(5,2))                                                                                    \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/warehouse'  \n",
					") ;                              \n",
					"                \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`web_page` (`wp_web_page_sk` INT, `wp_web_page_id` STRING, `wp_rec_start_date` DATE, `wp_rec_end_date` DATE, `wp_creation_date_sk` INT, `wp_access_date_sk` INT, `wp_autogen_flag` STRING, `wp_customer_sk` INT, `wp_url` STRING, `wp_type` STRING, `wp_char_count` INT, `wp_link_count` INT, `wp_image_count` INT, `wp_max_ad_count` INT)                                                                                   USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/web_page'   \n",
					")  ;\n",
					"\n",
					"         \n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`web_returns` (`wr_returned_time_sk` INT, `wr_item_sk` INT, `wr_refunded_customer_sk` INT, `wr_refunded_cdemo_sk` INT, `wr_refunded_hdemo_sk` INT, `wr_refunded_addr_sk` INT, `wr_returning_customer_sk` INT, `wr_returning_cdemo_sk` INT, `wr_returning_hdemo_sk` INT, `wr_returning_addr_sk` INT, `wr_web_page_sk` INT, `wr_reason_sk` INT, `wr_order_number` BIGINT, `wr_return_quantity` INT, `wr_return_amt` DECIMAL(7,2), `wr_return_tax` DECIMAL(7,2), `wr_return_amt_inc_tax` DECIMAL(7,2), `wr_fee` DECIMAL(7,2), `wr_return_ship_cost` DECIMAL(7,2), `wr_refunded_cash` DECIMAL(7,2), `wr_reversed_charge` DECIMAL(7,2), `wr_account_credit` DECIMAL(7,2), `wr_net_loss` DECIMAL(7,2), `wr_returned_date_sk` INT)                              \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/web_returns'\n",
					")                               \n",
					"PARTITIONED BY (wr_returned_date_sk) ;\n",
					"\n",
					"                                                                                                  \n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`web_sales` (`ws_sold_time_sk` INT, `ws_ship_date_sk` INT, `ws_item_sk` INT, `ws_bill_customer_sk` INT, `ws_bill_cdemo_sk` INT, `ws_bill_hdemo_sk` INT, `ws_bill_addr_sk` INT, `ws_ship_customer_sk` INT, `ws_ship_cdemo_sk` INT, `ws_ship_hdemo_sk` INT, `ws_ship_addr_sk` INT, `ws_web_page_sk` INT, `ws_web_site_sk` INT, `ws_ship_mode_sk` INT, `ws_warehouse_sk` INT, `ws_promo_sk` INT, `ws_order_number` BIGINT, `ws_quantity` INT, `ws_wholesale_cost` DECIMAL(7,2), `ws_list_price` DECIMAL(7,2), `ws_sales_price` DECIMAL(7,2), `ws_ext_discount_amt` DECIMAL(7,2), `ws_ext_sales_price` DECIMAL(7,2), `ws_ext_wholesale_cost` DECIMAL(7,2), `ws_ext_list_price` DECIMAL(7,2), `ws_ext_tax` DECIMAL(7,2), `ws_coupon_amt` DECIMAL(7,2), `ws_ext_ship_cost` DECIMAL(7,2), `ws_net_paid` DECIMAL(7,2), `ws_net_paid_inc_tax` DECIMAL(7,2), `ws_net_paid_inc_ship` DECIMAL(7,2), `ws_net_paid_inc_ship_tax` DECIMAL(7,2), `ws_net_profit` DECIMAL(7,2), `ws_sold_date_sk` INT)                                \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/web_sales'  \n",
					")                               \n",
					"PARTITIONED BY (ws_sold_date_sk) ;\n",
					"\n",
					"\n",
					"CREATE TABLE `Round_2_create_external_spark_tables_3TB_DB`.`web_site` (`web_site_sk` INT, `web_site_id` STRING, `web_rec_start_date` DATE, `web_rec_end_date` DATE, `web_name` STRING, `web_open_date_sk` INT, `web_close_date_sk` INT, `web_class` STRING, `web_manager` STRING, `web_mkt_id` INT, `web_mkt_class` STRING, `web_mkt_desc` STRING, `web_market_manager` STRING, `web_company_id` INT, `web_company_name` STRING, `web_street_number` STRING, `web_street_name` STRING, `web_street_type` STRING, `web_suite_number` STRING, `web_city` STRING, `web_county` STRING, `web_state` STRING, `web_zip` STRING, `web_country` STRING, `web_gmt_offset` DECIMAL(5,2), `web_tax_percentage` DECIMAL(5,2))                                                                   \n",
					"USING parquet                   \n",
					"OPTIONS (                       \n",
					"  `serialization.format` '1',   \n",
					"  path 'abfss://dbstorage3000@scbpocdev.dfs.core.windows.net/TPC-DS/SourceFiles_parquet/web_site'   \n",
					") ;                              \n",
					"\n",
					""
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# findings\n",
					"* when creating external spark tables with partitions, RECOVER PARTITIONS commands are required to recover the parititons. Else those tables will also return 0 records."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"ALTER TABLE Round_2_create_external_spark_tables_3TB_DB.catalog_returns RECOVER PARTITIONS;\n",
					"ALTER TABLE Round_2_create_external_spark_tables_3TB_DB.catalog_sales RECOVER PARTITIONS;\n",
					"ALTER TABLE Round_2_create_external_spark_tables_3TB_DB.inventory RECOVER PARTITIONS;\n",
					"ALTER TABLE Round_2_create_external_spark_tables_3TB_DB.store_returns RECOVER PARTITIONS;\n",
					"ALTER TABLE Round_2_create_external_spark_tables_3TB_DB.store_sales RECOVER PARTITIONS;\n",
					"ALTER TABLE Round_2_create_external_spark_tables_3TB_DB.web_returns RECOVER PARTITIONS;\n",
					"ALTER TABLE Round_2_create_external_spark_tables_3TB_DB.web_sales RECOVER PARTITIONS;"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from Round_2_create_external_spark_tables_3TB_DB.catalog_returns;\n",
					"select count(*) from Round_2_create_external_spark_tables_3TB_DB.catalog_sales;\n",
					"select count(*) from Round_2_create_external_spark_tables_3TB_DB.inventory;\n",
					"select count(*) from Round_2_create_external_spark_tables_3TB_DB.store_returns;\n",
					"select count(*) from Round_2_create_external_spark_tables_3TB_DB.store_sales;\n",
					"select count(*) from Round_2_create_external_spark_tables_3TB_DB.web_returns;\n",
					"select count(*) from Round_2_create_external_spark_tables_3TB_DB.web_sales;"
				],
				"execution_count": 3
			}
		]
	}
}